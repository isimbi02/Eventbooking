generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  role      Role      @default(USER)
  events    Event[]   @relation("EventOrganizer")
  bookings  Booking[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("users")
}

model Event {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  date        DateTime
  location    String
  category    Category
  capacity    Int
  imageUrl    String?   @default("")
  organizerId Int
  organizer   User      @relation("EventOrganizer", fields: [organizerId], references: [id], onDelete: Cascade)
  bookings    Booking[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([date, category])
  @@index([organizerId])
  @@map("events")
}

model Booking {
  id          Int      @id @default(autoincrement())
  eventId     Int
  event       Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
  userId      Int
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  status      Status   @default(CONFIRMED)
  bookingDate DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([eventId, userId])
  @@map("bookings")
}

enum Role {
  USER
  ADMIN
}

enum Category {
  CONFERENCE
  WORKSHOP
  SEMINAR
  NETWORKING
  SOCIAL
}

enum Status {
  CONFIRMED
  CANCELLED
  PENDING
}
